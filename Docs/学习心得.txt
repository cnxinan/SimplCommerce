文档：https://docs.simplcommerce.com/en/latest/
目标：学习理解框架运作原理，可以对框架进行功能扩展，最终要迁移村游网到该框架上。
改进点整理：
    1 后台所用框架链接全部为点击跳转，适当加一些弹窗等。
    2 多语言功能不完善，没办法通过界面添加修改。

开发环境建立：
vs2017 + sql server 2014
步骤：
    1 修改appsettings.json的DefaultConnection
    2 build解决方案
    3 打开Tool-Nuget Package Manager-Package Manager Console,输入Update-Database，用来创建数据库
    4 管理员账号密码：admin@simplcommerce.com, 1qazZAQ!

vs2017 + MariaDB
步骤:
	1 修改appsettings.json的DefaultConnection，MariaDB新建个空同名数据库。
	2 nuget引入EfCore mysql provider和Hangfire mysql stroage
	3 修改SimplCommerce.WebHost.Program.SetupConfiguration 和 SimplCommerce.WebHost.Extensions.ServiceCollectionExtensions.AddCustomizedDataStore 的provider 
	4 删除SimplCommerce.WebHost.Migrations 下的所有文件
	5 Package Manager Console, 输入 Add-Migration [migration name] 生成新的migration文件
	6 Package Manager Console, 输入 update-database 迁移数据。
	
整体框架解析：
startup：留着后面再看
依赖注入没有使用Autofac，而是在每个modules的 ModuleInitializer.cs里利用自带组件处理。
视图布局：https://www.cnblogs.com/dotNETCoreSG/p/aspnetcore-4_3_3-layout.html

数据实体注入：
	Setup.cs->services.AddCustomizedDataStore(_configuration);->ServiceCollectionExtensions.AddCustomizedDataStore->SimplDbContext.OnModelCreating->各个Modul的Data->
	*ModelBuilder
	
	

后台实现：
入口:SimplCommerce.Module.Core.HomeAdmin->index.cshtml
Angular root module：SimplCommerce.Module.Core->wwwroot->admin-app.js


功能模块解析：
一：国际化(多语言)
    asp.net core实现国际化(https://docs.microsoft.com/en-us/aspnet/core/fundamentals/localization?view=aspnetcore-2.1)
    深入解析：https://www.cnblogs.com/lwqlun/p/9764243.html
    Startup.cs services.AddCustomizedLocalization();
    视图直接做多语言是通过扩展视图引擎 ModuleViewLocationExpander.cs 来实现每个module都可以有自己的一套公共模板，在_ViewImports.cshtml中注入 
    @inject IViewLocalizer Localizer 来使用。
    本地化是做到数据库中。
二: 视图所用Razor特性
    1 tag helper 对html做了扩展
	
添加Module：
1 按其他module添加folder
2 修改新module .csproj follow其他module
3 在新module下添加module.json文件，按照其他module修改
4 SimplCommerce.WebHost 引用新加项目
5 SimplCommerce.WebHost 下的module.json 添加新module

部署
Linux部署：https://www.cnblogs.com/danvic712/p/9975402.html
Docker部署：https://www.cnblogs.com/danvic712/p/10566750.html
EntityFrame Migration: https://www.cnblogs.com/panchunting/p/entity-framework-code-first-migrations.html


